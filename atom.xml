<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>勿忘，须舍</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://forgetst.github.io/"/>
  <updated>2021-02-06T16:00:00.000Z</updated>
  <id>https://forgetst.github.io/</id>
  
  <author>
    <name>Mr Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>redis缓存雪崩、穿透、击穿概念及解决办法</title>
    <link href="https://forgetst.github.io/redis/redis%E7%BC%93%E5%AD%98%E9%9B%AA%E5%B4%A9%E3%80%81%E7%A9%BF%E9%80%8F%E3%80%81%E5%87%BB%E7%A9%BF%E6%A6%82%E5%BF%B5%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html"/>
    <id>https://forgetst.github.io/redis/redis缓存雪崩、穿透、击穿概念及解决办法.html</id>
    <published>2021-02-06T16:00:00.000Z</published>
    <updated>2021-02-06T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;redis缓存示意图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fpic2.zhimg.com%2Fv2-7d2f995b14ee7691dc9ad66e91609c05_r.jpg&amp;refer=http%3A%2F%2Fpic2.zhimg.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1615278693&amp;t=18e63386b257549d416b9378b7c1c09b&quot; alt=&quot;redis缓存示意图&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="redis" scheme="https://forgetst.github.io/categories/redis/"/>
    
    
      <category term="redis" scheme="https://forgetst.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>使用Celery Once来防止Celery重复执行同一个任务</title>
    <link href="https://forgetst.github.io/celery/%E4%BD%BF%E7%94%A8celery-once%E6%9D%A5%E9%98%B2%E6%AD%A2celery%E9%87%8D%E5%A4%8D%E6%89%A7%E8%A1%8C%E5%90%8C%E4%B8%80%E4%B8%AA%E4%BB%BB%E5%8A%A1.html"/>
    <id>https://forgetst.github.io/celery/使用celery-once来防止celery重复执行同一个任务.html</id>
    <published>2021-02-04T16:00:00.000Z</published>
    <updated>2021-02-04T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在使用&lt;code&gt;Celery&lt;/code&gt;的时候发现有的时候&lt;code&gt;Celery&lt;/code&gt;会将同一个任务执行两遍。比如相同的任务在不同的&lt;code&gt;worker&lt;/code&gt;中被分别执行，并且时间只相差几毫秒，使用&lt;code&gt;Celery Once&lt;/code&gt;可以处理这一情况。&lt;code&gt;Celery Once&lt;/code&gt;是利用 Redis 加锁来实现, &lt;code&gt;Celery Once&lt;/code&gt;在 &lt;code&gt;Task&lt;/code&gt;类基础上实现了&lt;code&gt;QueueOnce&lt;/code&gt;类，该类提供了任务去重的功能，所以在使用时，我们自己实现的方法需要将&lt;code&gt;QueueOnce&lt;/code&gt;设置为&lt;code&gt;base&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="celery" scheme="https://forgetst.github.io/categories/celery/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
      <category term="celery" scheme="https://forgetst.github.io/tags/celery/"/>
    
  </entry>
  
  <entry>
    <title>Golang在package main包下的中函数互相调用</title>
    <link href="https://forgetst.github.io/go/golang%E5%9C%A8package-main%E5%8C%85%E4%B8%8B%E7%9A%84%E4%B8%AD%E5%87%BD%E6%95%B0%E4%BA%92%E7%9B%B8%E8%B0%83%E7%94%A8.html"/>
    <id>https://forgetst.github.io/go/golang在package-main包下的中函数互相调用.html</id>
    <published>2021-01-31T16:00:00.000Z</published>
    <updated>2021-01-31T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Golang&lt;/code&gt; Main包下多个文件的相互调用，引发 &lt;code&gt;.\main.go:82:2: undefined: tsPra01&lt;/code&gt;异常，处理如下。&lt;/p&gt;
    
    </summary>
    
      <category term="go" scheme="https://forgetst.github.io/categories/go/"/>
    
    
      <category term="go" scheme="https://forgetst.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>python pip 用法</title>
    <link href="https://forgetst.github.io/python/python-pip-%E7%94%A8%E6%B3%95.html"/>
    <id>https://forgetst.github.io/python/python-pip-用法.html</id>
    <published>2021-01-26T16:00:00.000Z</published>
    <updated>2021-01-26T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;pip 是 Python 包管理工具，该工具提供了对Python 包的查找、下载、安装、卸载的功能。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python 异常记录</title>
    <link href="https://forgetst.github.io/python/python-%E5%BC%82%E5%B8%B8%E8%AE%B0%E5%BD%95.html"/>
    <id>https://forgetst.github.io/python/python-异常记录.html</id>
    <published>2021-01-26T16:00:00.000Z</published>
    <updated>2021-01-26T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot;
        
      
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python 安装虚拟环境</title>
    <link href="https://forgetst.github.io/python/python-%E5%AE%89%E8%A3%85%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83.html"/>
    <id>https://forgetst.github.io/python/python-安装虚拟环境.html</id>
    <published>2021-01-25T16:00:00.000Z</published>
    <updated>2021-01-25T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;虚拟环境用于管理不同版本或不用项目的pyhton开发环境。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python描述器使用指南</title>
    <link href="https://forgetst.github.io/python/python%E6%8F%8F%E8%BF%B0%E5%99%A8%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97.html"/>
    <id>https://forgetst.github.io/python/python描述器使用指南.html</id>
    <published>2021-01-19T16:00:00.000Z</published>
    <updated>2021-01-19T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;定义和简介&quot;&gt;&lt;a href=&quot;#定义和简介&quot; class=&quot;headerlink&quot; title=&quot;定义和简介&quot;&gt;&lt;/a&gt;定义和简介&lt;/h2&gt;&lt;p&gt;一般地，一个描述器是一个包含 “绑定行为” 的对象，对其属性的访问被描述器协议中定义的方法覆盖。这些方法有：&lt;code&gt;__get__()&lt;/code&gt;，&lt;code&gt;__set__()&lt;/code&gt; 和 &lt;code&gt;__delete__()&lt;/code&gt;。如果某个对象中定义了这些方法中的任意一个，那么这个对象就可以被称为一个描述器。&lt;/p&gt;
&lt;p&gt;属性访问的默认行为是从一个对象的字典中获取、设置或删除属性。例如，&lt;strong&gt;&lt;code&gt;a.x&lt;/code&gt; 的查找顺序会从 &lt;code&gt;a.__dict__[&amp;#39;x&amp;#39;]&lt;/code&gt; 开始，然后是 &lt;code&gt;type(a).__dict__[&amp;#39;x&amp;#39;]&lt;/code&gt;，接下来依次查找 &lt;code&gt;type(a)&lt;/code&gt; 的基类，不包括元类&lt;/strong&gt;。 如果找到的值是定义了某个描述器方法的对象，则 Python 可能会重载默认行为并转而发起调用描述器方法。这具体发生在优先级链的哪个环节则要根据所定义的描述器方法及其被调用的方式来决定。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Django 序列化问题</title>
    <link href="https://forgetst.github.io/python/django-%E5%BA%8F%E5%88%97%E5%8C%96%E9%97%AE%E9%A2%98.html"/>
    <id>https://forgetst.github.io/python/django-序列化问题.html</id>
    <published>2021-01-18T16:00:00.000Z</published>
    <updated>2021-01-18T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot;
        
      
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
    
      <category term="django" scheme="https://forgetst.github.io/tags/django/"/>
    
      <category term="pythoon" scheme="https://forgetst.github.io/tags/pythoon/"/>
    
  </entry>
  
  <entry>
    <title>python 连接远程服务器</title>
    <link href="https://forgetst.github.io/python/python-%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8.html"/>
    <id>https://forgetst.github.io/python/python-连接远程服务器.html</id>
    <published>2021-01-14T16:00:00.000Z</published>
    <updated>2021-01-14T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;paramiko是Python的一个库，实现了SSHv2协议(底层使用cryptography)&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Linux 密码修改</title>
    <link href="https://forgetst.github.io/Linux/linux-%E5%AF%86%E7%A0%81%E4%BF%AE%E6%94%B9.html"/>
    <id>https://forgetst.github.io/Linux/linux-密码修改.html</id>
    <published>2021-01-13T16:00:00.000Z</published>
    <updated>2021-01-13T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;Linux &lt;code&gt;passwd&lt;/code&gt;命令用来更改使用者的密码&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://forgetst.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://forgetst.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>pymysql 使用</title>
    <link href="https://forgetst.github.io/pymysql/pymysql-%E4%BD%BF%E7%94%A8.html"/>
    <id>https://forgetst.github.io/pymysql/pymysql-使用.html</id>
    <published>2021-01-12T16:00:00.000Z</published>
    <updated>2021-01-12T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot;
        
      
    
    </summary>
    
      <category term="pymysql" scheme="https://forgetst.github.io/categories/pymysql/"/>
    
    
      <category term="mysql" scheme="https://forgetst.github.io/tags/mysql/"/>
    
      <category term="pymysql" scheme="https://forgetst.github.io/tags/pymysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql 锁机制</title>
    <link href="https://forgetst.github.io/mysql/mysql-%E9%94%81%E6%9C%BA%E5%88%B6.html"/>
    <id>https://forgetst.github.io/mysql/mysql-锁机制.html</id>
    <published>2020-12-28T16:00:00.000Z</published>
    <updated>2020-12-28T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MySQL锁概述&quot;&gt;&lt;a href=&quot;#MySQL锁概述&quot; class=&quot;headerlink&quot; title=&quot;MySQL锁概述&quot;&gt;&lt;/a&gt;MySQL锁概述&lt;/h2&gt;&lt;p&gt;相对其他数据库而言，MySQL的锁机制比较简单，其最显著的特点是不同的存储引擎支持不同的锁机制。比如，MyISAM和MEMORY存储引擎采用的是表级锁（table-level locking）；BDB存储引擎采用的是页面锁（page-level locking），但也支持表级锁；InnoDB存储引擎既支持行级锁（row-level locking），也支持表级锁，但默认情况下是采用行级锁。&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://forgetst.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://forgetst.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql 多表连接查询</title>
    <link href="https://forgetst.github.io/mysql/mysql-%E5%A4%9A%E8%A1%A8%E8%BF%9E%E6%8E%A5%E6%9F%A5%E8%AF%A2.html"/>
    <id>https://forgetst.github.io/mysql/mysql-多表连接查询.html</id>
    <published>2020-12-25T16:00:00.000Z</published>
    <updated>2020-12-25T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;示例图片：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg2018.cnblogs.com%2Fcommon%2F842724%2F202002%2F842724-20200228155137649-1462263734.png&amp;refer=http%3A%2F%2Fimg2018.cnblogs.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1611585170&amp;t=cf9537e538554164e7bad0a122b496e0&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://forgetst.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://forgetst.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>docker 学习笔记</title>
    <link href="https://forgetst.github.io/docker/docker-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html"/>
    <id>https://forgetst.github.io/docker/docker-学习笔记.html</id>
    <published>2020-12-20T16:00:00.000Z</published>
    <updated>2020-12-20T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Docker简介&quot;&gt;&lt;a href=&quot;#Docker简介&quot; class=&quot;headerlink&quot; title=&quot;Docker简介&quot;&gt;&lt;/a&gt;Docker简介&lt;/h2&gt;&lt;p&gt;Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从 Apache2.0 协议开源。&lt;/p&gt;
&lt;p&gt;Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。&lt;/p&gt;
&lt;p&gt;容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。&lt;/p&gt;
    
    </summary>
    
      <category term="docker" scheme="https://forgetst.github.io/categories/docker/"/>
    
    
      <category term="docker" scheme="https://forgetst.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>npm install 安装依赖无反应</title>
    <link href="https://forgetst.github.io/web/npm/npm-install-%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E6%97%A0%E5%8F%8D%E5%BA%94.html"/>
    <id>https://forgetst.github.io/web/npm/npm-install-安装依赖无反应.html</id>
    <published>2020-12-20T16:00:00.000Z</published>
    <updated>2020-12-20T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot;
        
      
    
    </summary>
    
      <category term="web" scheme="https://forgetst.github.io/categories/web/"/>
    
      <category term="npm" scheme="https://forgetst.github.io/categories/web/npm/"/>
    
    
      <category term="web" scheme="https://forgetst.github.io/tags/web/"/>
    
      <category term="npm" scheme="https://forgetst.github.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>k8s安装记录</title>
    <link href="https://forgetst.github.io/k8s/k8s%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95.html"/>
    <id>https://forgetst.github.io/k8s/k8s安装记录.html</id>
    <published>2020-12-16T16:00:00.000Z</published>
    <updated>2020-12-16T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;k8s是一个docker集群的管理工具&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000021672013&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;K8S介绍&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="k8s" scheme="https://forgetst.github.io/categories/k8s/"/>
    
    
      <category term="k8s" scheme="https://forgetst.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>Django的缓存</title>
    <link href="https://forgetst.github.io/python/django%E7%9A%84%E7%BC%93%E5%AD%98.html"/>
    <id>https://forgetst.github.io/python/django的缓存.html</id>
    <published>2020-11-23T16:00:00.000Z</published>
    <updated>2020-11-23T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Django给我们提供了三种缓存方式&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;站点级缓存————缓存整个网站&lt;/li&gt;
&lt;li&gt;单个view缓存————对单个有效的视图的输出进行缓存&lt;/li&gt;
&lt;li&gt;模板片段缓存————缓存模板里面的某一部分内容&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
      <category term="django" scheme="https://forgetst.github.io/tags/django/"/>
    
  </entry>
  
  <entry>
    <title>python lxml module</title>
    <link href="https://forgetst.github.io/python/module/python-lxml-module.html"/>
    <id>https://forgetst.github.io/python/module/python-lxml-module.html</id>
    <published>2020-11-23T16:00:00.000Z</published>
    <updated>2020-11-23T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;lxml是python的一个解析库，支持HTML和XML的解析，支持XPath解析方式，而且解析效率非常高。&lt;/p&gt;
&lt;p&gt;XPath，全称XML Path Language，即XML路径语言，它是一门在XML文档中查找信息的语言，它最初是用来搜寻XML文档的，但是它同样适用于HTML文档的搜索。&lt;/p&gt;
&lt;p&gt;XPath的选择功能十分强大，它提供了非常简明的路径选择表达式，另外，它还提供了超过100个内建函数，用于字符串、数值、时间的匹配以及节点、序列的处理等，几乎所有我们想要定位的节点，都可以用XPath来选择&lt;/p&gt;
&lt;p&gt;XPath于1999年11月16日成为W3C标准，它被设计为供XSLT、XPointer以及其他XML解析软件使用，更多的文档可以访问其官方网站：&lt;a href=&quot;https://www.w3.org/TR/xpath/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.w3.org/TR/xpath/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
      <category term="module" scheme="https://forgetst.github.io/categories/python/module/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
      <category term="module" scheme="https://forgetst.github.io/tags/module/"/>
    
  </entry>
  
  <entry>
    <title>supervisor 安装使用</title>
    <link href="https://forgetst.github.io/supervisor/supervisor-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8.html"/>
    <id>https://forgetst.github.io/supervisor/supervisor-安装使用.html</id>
    <published>2020-11-08T16:00:00.000Z</published>
    <updated>2020-11-08T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://supervisord.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Supervisor&lt;/a&gt;是用Python开发的一个client/server服务，是Linux/Unix系统下的一个进程管理工具，不支持Windows系统。它可以很方便的监听、启动、停止、重启一个或多个进程。用Supervisor管理的进程，当一个进程意外被杀死，supervisort监听到进程死后，会自动将它重新拉起，很方便的做到进程自动恢复的功能，不再需要自己写shell脚本来控制。&lt;/p&gt;
    
    </summary>
    
      <category term="supervisor" scheme="https://forgetst.github.io/categories/supervisor/"/>
    
    
      <category term="supervisor" scheme="https://forgetst.github.io/tags/supervisor/"/>
    
  </entry>
  
  <entry>
    <title>python 内建函数</title>
    <link href="https://forgetst.github.io/python/python-%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0.html"/>
    <id>https://forgetst.github.io/python/python-内建函数.html</id>
    <published>2020-09-29T16:00:00.000Z</published>
    <updated>2020-09-29T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot;
        
      
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
</feed>
