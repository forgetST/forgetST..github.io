<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>勿忘，须舍</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://forgetst.github.io/"/>
  <updated>2019-09-09T16:00:00.000Z</updated>
  <id>https://forgetst.github.io/</id>
  
  <author>
    <name>Mr Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python fnmatch module</title>
    <link href="https://forgetst.github.io/python/module/ck0ti4eku0059dgv77spt0l9m.html"/>
    <id>https://forgetst.github.io/python/module/ck0ti4eku0059dgv77spt0l9m.html</id>
    <published>2019-09-09T16:00:00.000Z</published>
    <updated>2019-09-09T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;在python中，fnmatch模块是用来做字符串匹配文件名的标准库。&lt;/p&gt;
&lt;p&gt;源码: &lt;a href&gt; &lt;a href=&quot;https://github.com/python/cpython/tree/3.7/Lib/fnmatch.py&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lib/fnmatch.py&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;fnmatch支持的通配符：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;通配符&lt;/th&gt;
&lt;th&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;匹配任何数量的字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;？&lt;/td&gt;
&lt;td&gt;匹配单个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[seq]&lt;/td&gt;
&lt;td&gt;匹配seq中的字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;[!seq]&lt;/td&gt;
&lt;td&gt;匹配除seq以外的任何字符&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
      <category term="module" scheme="https://forgetst.github.io/categories/python/module/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
      <category term="module" scheme="https://forgetst.github.io/tags/module/"/>
    
  </entry>
  
  <entry>
    <title>猴子爬山问题</title>
    <link href="https://forgetst.github.io/math/ck0ti4e6u002udgv77m22ue97.html"/>
    <id>https://forgetst.github.io/math/ck0ti4e6u002udgv77m22ue97.html</id>
    <published>2019-09-08T16:00:00.000Z</published>
    <updated>2019-09-08T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;一只顽猴儿在一座有 &lt;strong&gt;n&lt;/strong&gt; 级台阶的山上爬山，假设猴子上山一步可跳1级台阶或3级台阶。试求猴子上山有多少种不同爬法。&lt;/p&gt;
    
    </summary>
    
      <category term="math" scheme="https://forgetst.github.io/categories/math/"/>
    
    
      <category term="math" scheme="https://forgetst.github.io/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>python 通过某个字段将记录分组</title>
    <link href="https://forgetst.github.io/python/tips/ck0ti4exb008pdgv7zliayhqu.html"/>
    <id>https://forgetst.github.io/python/tips/ck0ti4exb008pdgv7zliayhqu.html</id>
    <published>2019-09-05T16:00:00.000Z</published>
    <updated>2019-09-05T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;你有一个字典或者实例的序列，然后你想根据某个特定的字段比如 date 来分组迭代访问。&lt;/p&gt;
&lt;h2 id=&quot;实现&quot;&gt;&lt;a
        
      
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
      <category term="tips" scheme="https://forgetst.github.io/categories/python/tips/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python 序列中出现次数最多的元素</title>
    <link href="https://forgetst.github.io/python/tips/ck0ti4ewi008ddgv7xmd6wy39.html"/>
    <id>https://forgetst.github.io/python/tips/ck0ti4ewi008ddgv7xmd6wy39.html</id>
    <published>2019-09-05T16:00:00.000Z</published>
    <updated>2019-09-05T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;怎样找出一个序列中出现次数最多的元素呢？&lt;/p&gt;
&lt;h2 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
      <category term="tips" scheme="https://forgetst.github.io/categories/python/tips/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python 合并多个字典或映射</title>
    <link href="https://forgetst.github.io/python/tips/ck0ti4evw0084dgv76udebd18.html"/>
    <id>https://forgetst.github.io/python/tips/ck0ti4evw0084dgv76udebd18.html</id>
    <published>2019-09-05T16:00:00.000Z</published>
    <updated>2019-09-05T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;现在有多个字典或者映射，你想将它们从逻辑上合并为一个单一的映射后执行某些操作， 比如查找值或者检查某些键是否存在。&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
      <category term="tips" scheme="https://forgetst.github.io/categories/python/tips/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python 映射名称到序列元素</title>
    <link href="https://forgetst.github.io/python/tips/ck0ti4ex3008mdgv725ia4k94.html"/>
    <id>https://forgetst.github.io/python/tips/ck0ti4ex3008mdgv725ia4k94.html</id>
    <published>2019-09-05T16:00:00.000Z</published>
    <updated>2019-09-05T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;你有一段通过下标访问列表或者元组中元素的代码，但是这样有时候会使得你的代码难以阅读， 于是你想通过名称来访问元素。&lt;/p&gt;
&lt;h2
        
      
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
      <category term="tips" scheme="https://forgetst.github.io/categories/python/tips/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python import 原理</title>
    <link href="https://forgetst.github.io/python/ck0ti4eb80047dgv761x1iofi.html"/>
    <id>https://forgetst.github.io/python/ck0ti4eb80047dgv761x1iofi.html</id>
    <published>2019-09-03T16:00:00.000Z</published>
    <updated>2019-09-07T07:17:48.970Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文测试环境为python3。这里先简单介绍下与 import 导入相关的概念。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python 删除序列相同元素并保持顺序</title>
    <link href="https://forgetst.github.io/python/tips/ck0ti4evr0082dgv7dn2uwn5z.html"/>
    <id>https://forgetst.github.io/python/tips/ck0ti4evr0082dgv7dn2uwn5z.html</id>
    <published>2019-09-01T16:00:00.000Z</published>
    <updated>2019-09-01T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;怎样在一个序列上面保持元素顺序的同时消除重复的值？&lt;/p&gt;
&lt;h2 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot;
        
      
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
      <category term="tips" scheme="https://forgetst.github.io/categories/python/tips/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python zip 与 dict</title>
    <link href="https://forgetst.github.io/python/tips/ck0ti4evc007wdgv7od36o0qg.html"/>
    <id>https://forgetst.github.io/python/tips/ck0ti4evc007wdgv7od36o0qg.html</id>
    <published>2019-09-01T16:00:00.000Z</published>
    <updated>2019-09-01T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;zip 实现字典求最大值、最小值、排序等&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
      <category term="tips" scheme="https://forgetst.github.io/categories/python/tips/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python 实现一个顺序字典</title>
    <link href="https://forgetst.github.io/python/tips/ck0ti4ew80089dgv7ic05s8ge.html"/>
    <id>https://forgetst.github.io/python/tips/ck0ti4ew80089dgv7ic05s8ge.html</id>
    <published>2019-08-31T16:00:00.000Z</published>
    <updated>2019-08-31T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;你想创建一个字典，并且在迭代或序列化这个字典的时候能够控制元素的顺序。&lt;/p&gt;
&lt;h2 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot;
        
      
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
      <category term="tips" scheme="https://forgetst.github.io/categories/python/tips/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python 字典中的键映射多个值</title>
    <link href="https://forgetst.github.io/python/tips/ck0ti4ew30087dgv7bto6o1eu.html"/>
    <id>https://forgetst.github.io/python/tips/ck0ti4ew30087dgv7bto6o1eu.html</id>
    <published>2019-08-31T16:00:00.000Z</published>
    <updated>2019-08-31T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;实现一个键对应多个值的字典&lt;/p&gt;
&lt;h2 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
      <category term="tips" scheme="https://forgetst.github.io/categories/python/tips/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python heapq module</title>
    <link href="https://forgetst.github.io/python/module/ck0ti4elo005kdgv706stl85p.html"/>
    <id>https://forgetst.github.io/python/module/ck0ti4elo005kdgv706stl85p.html</id>
    <published>2019-08-31T16:00:00.000Z</published>
    <updated>2019-08-31T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Python提供的关于堆的操作模块。&lt;/p&gt;
&lt;p&gt;源码：&lt;a href=&quot;https://github.com/python/cpython/tree/3.7/Lib/heapq.py&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lib/heapq.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python 提供的是基于小顶堆的操作，因此 Python 可以对 list 中的元素进行小顶堆排列，这样程序每次获取堆中元素时，总会取得堆中最小的元素。&lt;/p&gt;
&lt;p&gt;有关堆的介绍：&lt;a href=&quot;https://baike.baidu.com/item/%E5%A0%86/20606834?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
      <category term="module" scheme="https://forgetst.github.io/categories/python/module/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
      <category term="module" scheme="https://forgetst.github.io/tags/module/"/>
    
  </entry>
  
  <entry>
    <title>python  实现一个优先级队列</title>
    <link href="https://forgetst.github.io/python/tips/ck0ti4ev4007udgv70ra643ak.html"/>
    <id>https://forgetst.github.io/python/tips/ck0ti4ev4007udgv70ra643ak.html</id>
    <published>2019-08-31T16:00:00.000Z</published>
    <updated>2019-08-31T16:00:00.000Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;实现一个优先级队列&quot;&gt;&lt;a href=&quot;#实现一个优先级队列&quot; class=&quot;headerlink&quot; title=&quot;实现一个优先级队列&quot;&gt;&lt;/a&gt;实现一个优先级队列&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;问题&lt;/p&gt;
&lt;p&gt;怎样实现一个按优先级排序的队列？
        
      
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
      <category term="tips" scheme="https://forgetst.github.io/categories/python/tips/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>The Python 魔法方法</title>
    <link href="https://forgetst.github.io/python/ck0ti4ebc0049dgv7q1dqb909.html"/>
    <id>https://forgetst.github.io/python/ck0ti4ebc0049dgv7q1dqb909.html</id>
    <published>2019-08-29T16:00:00.000Z</published>
    <updated>2019-09-01T07:37:30.955Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;魔法方法&lt;/strong&gt;，也叫做&lt;strong&gt;特殊方法&lt;/strong&gt;，是指名称前面和后面都加上了双下划线的方法。&lt;/p&gt;
&lt;p&gt;对python而言，下划线对解释器有特殊的意义，而且是内建标识符所使用的符号，故应慎用下划线开始的变量名。&lt;/p&gt;
&lt;p&gt;python中，变量以单下划线和双下划线开始，有不同的含义：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;“单下划线” 开始的成员变量叫做保护变量&lt;/strong&gt;，意思是只有类对象和子类对象自己能访问到这些变量；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;“双下划线” 开始的是私有成员&lt;/strong&gt;，意思是只有类对象自己能访问，连子类对象也不能访问到这个数据。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>斐波那契数列</title>
    <link href="https://forgetst.github.io/math/ck0ti4e76002zdgv7e23bw2bv.html"/>
    <id>https://forgetst.github.io/math/ck0ti4e76002zdgv7e23bw2bv.html</id>
    <published>2019-08-25T16:00:00.000Z</published>
    <updated>2019-08-25T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;斐波那契数列（Fibonacci sequence），又称&lt;a href=&quot;https://baike.baidu.com/item/黄金分割/115896&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;黄金分割&lt;/a&gt;数列、因数学家列昂纳多·斐波那契（Leonardoda Fibonacci）以兔子繁殖为例子而引入，故又称为“&lt;a href=&quot;https://baike.baidu.com/item/兔子数列/6849441&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;兔子数列&lt;/a&gt;”。&lt;/p&gt;
&lt;p&gt;其指的是这样一个数列：1、1、2、3、5、8、13、21、34、……&lt;br&gt;如果设F(n）为该数列的第n项（n∈N*），那么这句话可以写成如下形式：:F(n)=F(n-1)+F(n-2)&lt;/p&gt;
&lt;p&gt;在现代物理、准晶体结构、化学等领域，斐波纳契数列都有直接的应用。&lt;/p&gt;
&lt;p&gt;详细介绍参考：&lt;a href=&quot;https://baike.baidu.com/item/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/99145?fromtitle=%E6%96%90%E6%B3%A2%E7%BA%B3%E5%A5%91%E6%95%B0%E5%88%97&amp;fromid=6286043&amp;fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;传送门&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="math" scheme="https://forgetst.github.io/categories/math/"/>
    
    
      <category term="math" scheme="https://forgetst.github.io/tags/math/"/>
    
  </entry>
  
  <entry>
    <title>python operator module</title>
    <link href="https://forgetst.github.io/python/module/ck0ti4es1007adgv74gp27jvp.html"/>
    <id>https://forgetst.github.io/python/module/ck0ti4es1007adgv74gp27jvp.html</id>
    <published>2019-08-24T16:00:00.000Z</published>
    <updated>2019-08-24T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;operator&lt;/strong&gt;模块提供了一套与Python的内置运算符对应的高效率函数。 许多函数名与特殊方法名相同，只是没有双下划线。为了向后兼容性，也保留了许多包含双下划线的函数。为了表述清楚，建议使用没有双下划线的函数。&lt;/p&gt;
&lt;p&gt;函数包含的种类有：&lt;strong&gt;对象的比较运算、逻辑运算、数学运算以及序列运算&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;源代码:&lt;/strong&gt; &lt;a href=&quot;https://github.com/python/cpython/tree/3.7/Lib/operator.py&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lib/operator.py&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="https://forgetst.github.io/categories/python/"/>
    
      <category term="module" scheme="https://forgetst.github.io/categories/python/module/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
      <category term="module" scheme="https://forgetst.github.io/tags/module/"/>
    
  </entry>
  
  <entry>
    <title>Linux 统计文件及目录个数</title>
    <link href="https://forgetst.github.io/Linux/command/ck0ti4e3d001ndgv7rni40i15.html"/>
    <id>https://forgetst.github.io/Linux/command/ck0ti4e3d001ndgv7rni40i15.html</id>
    <published>2019-08-20T16:00:00.000Z</published>
    <updated>2019-08-20T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;可通过命令 &lt;code&gt;wc&lt;/code&gt; 、&lt;code&gt;cat&lt;/code&gt;等实现。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://forgetst.github.io/categories/Linux/"/>
    
      <category term="command" scheme="https://forgetst.github.io/categories/Linux/command/"/>
    
    
      <category term="Linux" scheme="https://forgetst.github.io/tags/Linux/"/>
    
      <category term="command" scheme="https://forgetst.github.io/tags/command/"/>
    
  </entry>
  
  <entry>
    <title>Linux wc command</title>
    <link href="https://forgetst.github.io/Linux/command/wc/ck0ti4ekb0053dgv7g2ztibrl.html"/>
    <id>https://forgetst.github.io/Linux/command/wc/ck0ti4ekb0053dgv7g2ztibrl.html</id>
    <published>2019-08-19T16:00:00.000Z</published>
    <updated>2019-08-19T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;作用&quot;&gt;&lt;a href=&quot;#作用&quot; class=&quot;headerlink&quot; title=&quot;作用&quot;&gt;&lt;/a&gt;作用&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;wc&lt;/strong&gt; 命令用于计算字数。&lt;/p&gt;
&lt;p&gt;利用 &lt;strong&gt;wc&lt;/strong&gt; 指令我们可以计算文件的Byte数、字数、或是列数，若不指定文件名称、或是所给予的文件名为”-“，则wc指令会从标准输入设备读取数据。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://forgetst.github.io/categories/Linux/"/>
    
      <category term="command" scheme="https://forgetst.github.io/categories/Linux/command/"/>
    
      <category term="wc" scheme="https://forgetst.github.io/categories/Linux/command/wc/"/>
    
    
      <category term="Linux" scheme="https://forgetst.github.io/tags/Linux/"/>
    
      <category term="command" scheme="https://forgetst.github.io/tags/command/"/>
    
  </entry>
  
  <entry>
    <title>Linux 设置静态IP</title>
    <link href="https://forgetst.github.io/Linux/ck0ti4e4f0021dgv7yr28ukrt.html"/>
    <id>https://forgetst.github.io/Linux/ck0ti4e4f0021dgv7yr28ukrt.html</id>
    <published>2019-08-18T16:00:00.000Z</published>
    <updated>2019-08-18T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第一步：激活网卡&quot;&gt;&lt;a href=&quot;#第一步：激活网卡&quot; class=&quot;headerlink&quot; title=&quot;第一步：激活网卡&quot;&gt;&lt;/a&gt;第一步：激活网卡&lt;/h2&gt;&lt;p&gt;通过ip add或者ifconfig 查看网卡名称。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://forgetst.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://forgetst.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式简述</title>
    <link href="https://forgetst.github.io/regex/ck0ti4dxl000xdgv79y88165j.html"/>
    <id>https://forgetst.github.io/regex/ck0ti4dxl000xdgv79y88165j.html</id>
    <published>2019-08-15T16:00:00.000Z</published>
    <updated>2019-08-19T12:42:16.742Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;何谓正则表达式&quot;&gt;&lt;a href=&quot;#何谓正则表达式&quot; class=&quot;headerlink&quot; title=&quot;何谓正则表达式&quot;&gt;&lt;/a&gt;何谓正则表达式&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;正则表达式&lt;/strong&gt; 英文为 Regular Expression，是使用字符和特殊符号组成的能够描述某一类字符串的表达式。可以用来检查一个字符串是否含有某种子串、将匹配的子串替换或者从某个字符串中取出符合某个条件的子串等。&lt;/p&gt;
&lt;p&gt;正则表达式看似繁琐（有规律可寻），然功能强大。熟知，简化工作，提升效率。&lt;/p&gt;
    
    </summary>
    
      <category term="regex" scheme="https://forgetst.github.io/categories/regex/"/>
    
    
      <category term="python" scheme="https://forgetst.github.io/tags/python/"/>
    
      <category term="regex" scheme="https://forgetst.github.io/tags/regex/"/>
    
  </entry>
  
</feed>
